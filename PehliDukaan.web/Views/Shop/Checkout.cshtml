@model CheckoutViewModel

@{
    ViewBag.Title = "Checkout";
}

@if (Model != null && Model.CartProducts != null && Model.CartProducts.Any()) {
    var i = 1;
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var product in Model.CartProducts) {
                            var productQuantity = Model.CartProducts.Where(x => x.Id == product.Id).Count();

                            <li class="list-group-item d-flex justify-content-between lh-condensed" data-id="@product.Id">
                                <div>
                                    <h6 class="my-0">@i - @product.Name - Qty: @productQuantity</h6>
                                    <small class="text-muted">@(product.Description.Length > 100 ? product.Description.Substring(0, 99) : product.Description)</small>
                                </div>
                                <span class="text-muted">Unit Price: $ @product.Price - Total Price: @(productQuantity * product.Price)</span>
                            </li>

                            i++;
                        }

                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total(USD)</span>
                            <strong>$ @Model.CartProducts.Sum(x => x.Price))</strong>
                        </li>
                    </ul>
                </div>
                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3">Billing address</h4>
                    <form class="needs-validation" novalidate="">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="firstName">Name</label>
                                <input type="text" class="form-control" id="Name" placeholder="" value="@Model.User.Name" required="">
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="email">Email <span class="text-muted">(Optional)</span></label>
                            <input type="email" class="form-control" id="Email" placeholder="you@example.com" value="@Model.User.Email">
                        </div>

                        <div class="mb-3">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="" value="@Model.User.Address">
                        </div>

                        <hr class="mb-4">
                        <button id="placeOrderBtn" class="btn btn-primary btn-lg btn-block" type="button">Place Order!</button>
                    </form>
                </div>
            </div>
        </div><!-- /.container -->
    </section>


    <script>
        $("#placeOrderBtn").click(function () {
            //getCookieJsonItems()
            debugger;
        $.ajax({
            method: "POST",
			url: '@Url.Action("PlaceOrder", "Shop")',
            data: JSON.stringify([
                @Model.CartProducts.Select(p => String.Format("{{\"id\": {0}, \"quantity\": {1}}},", p.Id, p.Quantity))
            ]),
            contentType: "application/json; charset=utf-8",
		})
        .done(function (response) {
        	if(response.Success)
        	{
        		$.cookie('CartProducts', '', { path: '/' });
        		updateCartProducts();

        		swal("Done", "Your Order has been placed.", "success").then((value) => {
        			window.location = '@Url.Action("Index", "Shop")';
        		});;
        	}
        	else{
        		swal("Failed", "Unable to place order.", "warning");
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});
    </script>
}
else {
    <div>
        <b>No Products in Cart.</b>
    </div>
}
