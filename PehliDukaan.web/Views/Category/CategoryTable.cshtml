@model PehliDukaan.web.Models.ViewModels.CategorySearchViewModel
@{
    ViewBag.Title = "CategoryTable";
}

<style>
    .wrap-td {
        width: 1px;
        white-space: nowrap;
    }
</style>

<div>

    <form method="post">
        <div class="row">
            <div class="col-md-8">

                <div class="form-group">
                    <label>Search</label>
                    <input id="searchTxt" class="form-control" name="Search" value="@Model.SearchItem" />

                </div>

            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button class="form-control btn btn-success" type="button" id="searchBtn">Search</button>

                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="form-control btn btn-info" type="button" id="resetBtn">Reset</button>

                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="form-control btn btn-success" type="button" id="newBtn">New</button>

                        </div>



                    </div>
                </div>
            </div>
        </div>
    </form>

</div>

<div>

    <table class="table table-striped table-dark">
        <thead class="thead-dark">
            <tr>
                <th class="font-weight-bold">Category Name</th>
                <th class="font-weight-bold">Products</th>
                <th class="wrap-td font-weight-bold">Actions</th>
            </tr>

        </thead>

        <tbody>
            
            @if (Model.Categories !=null && Model.Categories.Count > 0) {

                foreach (var category in Model.Categories) {

                    <tr>
                        
                        <td>@category.Name</td>
                        <td>
                            @category.Products.Count
                        </td>

                        <td class="wrap-td">
                            <button class="editBtn" data-id="@category.Id">Edit</button>
                            <button class="deleteBtn" data-id="@category.Id">Delete</button>

                        </td>
                    </tr>

                }

            }
            else {
                <tr><td colspan="3" class="text-danger">No Categories Found.</td></tr>
            }
        </tbody>
    </table>
</div>





<script>


    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
            url: '/Category/CategoryTable',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {
                $("#tableContiner").html(response);;
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");

            });
    });



    $("#resetBtn").click(function () {
        var searchValue = '';

        $.ajax({
            url: '/Category/CategoryTable',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {
                $("#tableContiner").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });

    $("#newBtn").click(function () {
        $.ajax({
         
            url: '/Category/Create',
        })
            .done(function (response) {
                $("#actionContainer").html(response);
                focusAction("actionContainer");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");

            });
    });

    $(".editBtn").click(function () {
        $.ajax({

            type:'GET',
            url: '/Category/Edit',
         
            data: {
                Id: $(this).attr("data-id")

            }
        })
            .done(function (response) {
                $("#actionContainer").html(response);
                focusAction("actionContainer");               
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");

            });
    });


    $(".deleteBtn").click(function () {

        swal({
            title: "Confirm?",
            text: "Are you sure you want to delete this Category?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {


                    $.ajax({
                        type: "POST",
                        url: '/Category/Delete',
                        data: {
                            Id: $(this).attr("data-id")
                        }
                    })
                        .done(function (response) {
                            $("#tableContiner").html(response);
                            swal("Record Deleted Successfully!", {
                                icon: "success",
                            });
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("FAIL");

                        });
                }
            });

    });

</script>